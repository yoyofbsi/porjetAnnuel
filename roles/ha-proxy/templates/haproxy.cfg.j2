global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL). This list is from:
        #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
        # An alternative list with additional directives can be obtained from
        #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
        ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
        ssl-default-bind-options no-sslv3

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

backend per_ip_rates
        stick-table type ip size 1m expire 10m store http_req_rate(10s)

# On défini la partie frontend
frontend frontend-base
        # On défini l'IP et le port sur lequel va écouter le proxy
        bind {{ primary.ip }}:80
        bind {{ primary.ip }}:443 ssl crt-list /etc/ssl/private/crt-list.txt
        http-request redirect scheme https unless { ssl_fc }
        http-request track-sc0 src table per_ip_rates
        http-request deny deny_status 429 if { sc_http_req_rate(0) gt 100 }
        
        # On indique le nom de la partie backend dispo plus bas
        default_backend    backend-base
        # On active le fait de ne pas forward les requêtes avec l'IP du 
        # proxy mais avec l'IP du ou des clients
        option             forwardfor
        http-request add-header HAip {{ ansible_host }}


# On défini la partie backend
backend backend-base
        # On utilise la méthode roundrobin pour le loadbalancing
        balance            roundrobin
        cookie SERVERID insert indirect nocache
        # On défini les serveurs qui sont en backend
        {% for _host in groups["webservers"] %}
server             {{ hostvars[_host]["ansible_hostname"] }} {{ hostvars[_host].ansible_host }}:443 check cookie s{{ loop.index }} ssl verify none fall 3 rise 2
        {% endfor %}

